# Requisitos Funcionais

RF1: O jogo deve conter um número indefinido de jogadores e apenas um mestre
RF2: Os jogadores devem poder gerenciar uma ficha de personagem (RNF7)
RF3: O mestre deve poder hospedar um jogo para um número indefinido de jogadores
RF4: O mestre deve ter acesso às fichas dos jogadores
RF5: O mestre deve poder adicionar e remover itens às fichas dos jogadores
RF6: O mestre deve poder adicionar e remover pontos de vida dos jogadores
RF7: O mestre deve poder adicionar e remover experiência dos jogadores
RF8: O mestre deve poder gerenciar uma biblioteca com os items existentes em sua campanha
RF9: Os jogadores podem sugerir items novos ao mestre (RNF8)
RF10: Os jogadores devem poder enviar de itens para outros jogadores


# Requisitos não-Funcionais

RNF1: O jogo deve ser distribuído e executar simultaneamente em no mínimo 3 hosts diferentes. 
RNF2: Se necessário, pode ser implementado um server para ser acessado pelos hosts. 
a) Não se deve utilizar nenhuma implementação pronta de qualquer server (ex: ExpressJS).
b) A linguagem de programação utilizada para implementar o server deve ser diferenteda linguagem utilizada para implementar os hosts. 
RNF3: A comunicação pode ser realizada através de:
a) Sockets; ou
b) RMI; ou
c) CORBA;
RNF4. Caso utilizar Sockets no RNF3, então deve-se observar os seguintes requisitos:
a) Sockets ociosos não podem existir (todos devem ser fechados logo após a comunicação). 
b) Os dados enviados entre host/server e host/host podem estar no formato JSON ou XML. Não é permitido o uso de serialização de objetos. 
RNF5: A aplicação cliente deve ter interface gráfica. 
a) A interface gráfica deve exibir o status (online/offline) dos hosts envolvidos no sistema. 
b) Pode-se utilizar interface gráfica disponível em outros projetos, citando a fonte/projeto. MAS ATENÇÃO: o projeto utilizado como base não pode ser distribuído (não pode já tercomunicação entre clientes/servidores)
RNF6: A interface gráfica deve ser desacoplada do restante do sistema, para que seja possível
realizar testes de integração da comunicação sem depender da interface gráfica.
RNF7: A ficha de um personagem possuir as seguintes informações:
a) Pontos de vida, uma unidade numérica e editável, com valor máximo indefinido e mínimo 0.
b) Itens, objetos com nome, preço e descrição, que podem ser adicionados ou removidos, porém não editáveis.
c) Experiência, uma unidade numérica que pode ser editável, sem valor máximo e com mínimo 0.
RNF8: Quando um item for sugerido ao mestre, o mestre tem a opção de adicionar o item à sua biblioteca ou não.
